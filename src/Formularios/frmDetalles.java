/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Formularios;

import Entidades.*;
import java.io.File;
import java.io.PrintWriter;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import javax.swing.JFileChooser;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Jimmy
 */
public class frmDetalles extends javax.swing.JFrame {

    /**
     * Creates new form frmDetalles
     */
    
    DefaultTableModel modeloDetallesPacientes;
    ArrayList<String> listaGlobalDetalles;
    GestorDoctores doctores;
    SimpleDateFormat formatoFecha;
    
    public frmDetalles(GestorDoctores doctores) {
        initComponents();
        
        listaGlobalDetalles = new ArrayList<>();
        this.doctores = doctores;
        modeloDetallesPacientes = (DefaultTableModel) this.jtListaGlobalDetalle.getModel();
        formatoFecha = new SimpleDateFormat("dd/MM/yyyy");
        
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        CargarTablas();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnImportarJSON = new javax.swing.JButton();
        btnExportarHTML = new javax.swing.JButton();
        btnExportarCSV = new javax.swing.JButton();
        btnExportarJSON = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jtListaGlobalDetalle = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        btnOrdenarID_BD = new javax.swing.JButton();
        btnOrdenarID_Sort = new javax.swing.JButton();
        btnOrdenarNombre = new javax.swing.JButton();
        btnOrdenarFecha = new javax.swing.JButton();
        btnBuscarDoctor = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        txtBuscarPaciente = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnImportarJSON.setText("Importar JSON");
        btnImportarJSON.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImportarJSONActionPerformed(evt);
            }
        });

        btnExportarHTML.setLabel("Exportar HTML");
        btnExportarHTML.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExportarHTMLActionPerformed(evt);
            }
        });

        btnExportarCSV.setLabel("Exportar CSV");
        btnExportarCSV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExportarCSVActionPerformed(evt);
            }
        });

        btnExportarJSON.setLabel("Exportar JSON");
        btnExportarJSON.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExportarJSONActionPerformed(evt);
            }
        });

        jLabel9.setText("Lista global:");

        jtListaGlobalDetalle.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Nombre", "Padecimiento", "Estado", "Fecha de ingreso", "Doctor"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtListaGlobalDetalle.setName("jtPaciente"); // NOI18N
        jScrollPane3.setViewportView(jtListaGlobalDetalle);

        jLabel1.setText("Ordenar por ID (burbuja doble):");

        jLabel2.setText("Odenar por ID (sort):");

        jLabel3.setText("Ordenar por nombre:");

        jLabel4.setText("Ordenar por fechar de ingreso:");

        jLabel5.setText("Exportar HTML:");

        jLabel6.setText("Exportar JSON:");

        jLabel7.setText("Importar JSON:");

        jLabel8.setText("Exportar CSV:");

        btnOrdenarID_BD.setText("Ordenar ID");
        btnOrdenarID_BD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOrdenarID_BDActionPerformed(evt);
            }
        });

        btnOrdenarID_Sort.setText("Ordenar ID");

        btnOrdenarNombre.setText("Ordenar por nombre");

        btnOrdenarFecha.setText("Ordenar por fecha");

        btnBuscarDoctor.setText("Buscar");
        btnBuscarDoctor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarDoctorActionPerformed(evt);
            }
        });

        jLabel10.setText("Buscar Paciente por ID:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 905, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(5, 5, 5)
                                .addComponent(btnOrdenarFecha)
                                .addGap(76, 76, 76))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(58, 58, 58)
                                                .addComponent(jLabel2))
                                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(btnOrdenarID_Sort)
                                            .addComponent(btnOrdenarNombre)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnOrdenarID_BD)))
                                .addGap(63, 63, 63)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnExportarHTML))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnExportarJSON, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnImportarJSON, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnExportarCSV, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtBuscarPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnBuscarDoctor)))
                        .addGap(24, 24, 24))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 192, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(btnExportarHTML)
                    .addComponent(jLabel5)
                    .addComponent(btnOrdenarID_BD))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(btnOrdenarID_Sort)
                            .addComponent(btnExportarCSV)
                            .addComponent(jLabel8)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnBuscarDoctor)
                            .addComponent(txtBuscarPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(btnOrdenarNombre)
                    .addComponent(btnExportarJSON)
                    .addComponent(jLabel6))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(btnImportarJSON)
                    .addComponent(jLabel7)
                    .addComponent(btnOrdenarFecha))
                .addGap(10, 10, 10))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnImportarJSONActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImportarJSONActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnImportarJSONActionPerformed

    private void btnExportarHTMLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExportarHTMLActionPerformed
        // TODO add your handling code here:
        PrintWriter pw = null;
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setCurrentDirectory(new File(System.getProperty("user.home")));
        int result = fileChooser.showOpenDialog(this);
        File selectedFile=null;
        if (result == JFileChooser.APPROVE_OPTION) 
        {
            selectedFile = fileChooser.getSelectedFile();
            System.out.println("Archivo seleccionado: " + selectedFile.getAbsolutePath());
        }
        try 
        {
            pw = new PrintWriter(new File(selectedFile.getAbsolutePath()));
            // ARMAR EL ARCHIVO HTML....
            StringBuilder strLinea = new StringBuilder();
            strLinea.append("<html><head><title>Lista de panchitos</title></head>"
                    + "<body><h2>Lista de pacientes</h2>"
                    + "<table border='2'>" +"\n");
            strLinea.append("<tr><td><b>ID</td><td><b>Nombre</td><td><b>Padecimiento</td><td><b>Estado</td><td><b>Fecha Ingreso</td><td><b>Doctor</td></tr>" +"\n");
            for(int j=0; j<this.doctores.obtenerListaDoctores().size(); j++)
            {
                for(int i=0; i< this.doctores.obtenerListaDoctores().get(j).listaPacientes.size() ; i++)
                {
                    strLinea.append("<tr>" +"\n");
                    // primer atributo
                    strLinea.append("<td>");
                    strLinea.append(this.doctores.obtenerListaDoctores().get(j).listaPacientes.get(i).ID);
                    strLinea.append("</td>" +"\n");
                    // segundo atributo
                    strLinea.append("<td>");
                    strLinea.append(this.doctores.obtenerListaDoctores().get(j).listaPacientes.get(i).nombre);
                    strLinea.append("</td>" +"\n");
                    // tercer atributo
                    strLinea.append("<td>");
                    strLinea.append(this.doctores.obtenerListaDoctores().get(j).listaPacientes.get(i).padecimiento);
                    strLinea.append("</td>" +"\n");
                     // cuarto atributo
                    strLinea.append("<td>");
                    strLinea.append(this.doctores.obtenerListaDoctores().get(j).listaPacientes.get(i).estado);
                    strLinea.append("</td>" +"\n");
                    
                    strLinea.append("<td>");
                    strLinea.append(formatoFecha.format(doctores.obtenerListaDoctores().get(j).listaPacientes.get(i).fechaIngreso));
                    strLinea.append("</td>" +"\n");
                    
                    strLinea.append("<td>");
                    strLinea.append(this.doctores.obtenerListaDoctores().get(j).nombre);
                    strLinea.append("</td>" +"\n");

                    strLinea.append("</tr>" +"\n");
                }
            }
            strLinea.append("</table></body></html>" +"\n");
            pw.write(strLinea.toString());
            pw.close();
        }
        catch (Exception e) 
        {
            //this.jTextArea1.setText("ERROR: "+e.toString());
        }
    }//GEN-LAST:event_btnExportarHTMLActionPerformed

    private void btnExportarCSVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExportarCSVActionPerformed
        // TODO add your handling code here:
        PrintWriter pw = null;
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setCurrentDirectory(new File(System.getProperty("user.home")));
        int result = fileChooser.showOpenDialog(this);
        File selectedFile=null;
        if (result == JFileChooser.APPROVE_OPTION) 
        {
            selectedFile = fileChooser.getSelectedFile();
            System.out.println("Archivo seleccionado: " + selectedFile.getAbsolutePath());
        }
        try 
        {
            pw = new PrintWriter(new File(selectedFile.getAbsolutePath()));
        }
        catch (Exception e) 
        {
            //this.jTextArea1.setText("ERROR: "+e.toString());
        }
        
        StringBuilder strLinea = new StringBuilder();
        String id,nombre,padecimiento,estado,fecha,doctor;
        
        strLinea.append("ID" + "," + "Nombre, Padecimiento, Estado, Fecha, Doctor\n");
        for(int i=0; i<this.doctores.obtenerListaDoctores().size(); i++){
            for(int j=0; j<this.doctores.obtenerListaDoctores().get(i).listaPacientes.size(); j++){
                id = this.doctores.obtenerListaDoctores().get(i).listaPacientes.get(j).ID;
                nombre = this.doctores.obtenerListaDoctores().get(i).listaPacientes.get(j).nombre;
                padecimiento = this.doctores.obtenerListaDoctores().get(i).listaPacientes.get(j).padecimiento;
                estado = this.doctores.obtenerListaDoctores().get(i).listaPacientes.get(j).estado;
                fecha = formatoFecha.format(doctores.obtenerListaDoctores().get(i).listaPacientes.get(j).fechaIngreso);
                doctor = this.doctores.obtenerListaDoctores().get(i).nombre;
                
                strLinea.append(id + "," + nombre + "," + padecimiento + "," + estado + "," + fecha + "," + doctor + "," + "\n");
            }
        }
        pw.write(strLinea.toString());
        pw.close();
        System.out.println("Hecho!");
    }//GEN-LAST:event_btnExportarCSVActionPerformed

    private void btnExportarJSONActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExportarJSONActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnExportarJSONActionPerformed

    private void btnOrdenarID_BDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOrdenarID_BDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnOrdenarID_BDActionPerformed

    private void btnBuscarDoctorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarDoctorActionPerformed
        //TODO add your handling code here:
        
    }//GEN-LAST:event_btnBuscarDoctorActionPerformed

    private void CargarTablas(){
        this.modeloDetallesPacientes.getDataVector().removeAllElements();
        
        for(int i=0; i<this.doctores.obtenerListaDoctores().size(); i++)
        {
            for(int j=0; j<this.doctores.obtenerListaDoctores().get(i).listaPacientes.size(); j++){
                String[] registroDoctores = {
                this.doctores.obtenerListaDoctores().get(i).listaPacientes.get(j).ID,
                this.doctores.obtenerListaDoctores().get(i).listaPacientes.get(j).nombre, 
                this.doctores.obtenerListaDoctores().get(i).listaPacientes.get(j).padecimiento,
                this.doctores.obtenerListaDoctores().get(i).listaPacientes.get(j).estado,
                formatoFecha.format(doctores.obtenerListaDoctores().get(i).listaPacientes.get(j).fechaIngreso),
                this.doctores.obtenerListaDoctores().get(i).nombre
            };
            modeloDetallesPacientes.addRow(registroDoctores);
            }  
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmDetalles.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmDetalles.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmDetalles.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmDetalles.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        GestorDoctores doctores = new GestorDoctores();
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmDetalles(doctores).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscarDoctor;
    private javax.swing.JButton btnExportarCSV;
    private javax.swing.JButton btnExportarHTML;
    private javax.swing.JButton btnExportarJSON;
    private javax.swing.JButton btnImportarJSON;
    private javax.swing.JButton btnOrdenarFecha;
    private javax.swing.JButton btnOrdenarID_BD;
    private javax.swing.JButton btnOrdenarID_Sort;
    private javax.swing.JButton btnOrdenarNombre;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jtListaGlobalDetalle;
    private javax.swing.JTextField txtBuscarPaciente;
    // End of variables declaration//GEN-END:variables
}
